<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="bach.quantiles" module="bach" kind="patcher" category="Math">

	<digest>
		Find quantiles or filter according to them
	</digest>

	<description>
		Finds quantiles of an llll or filters the llll by keeping elements only inside some quantile regions.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">bachproject</metadata>
		<metadata name="tag">bach</metadata>
		<metadata name="tag">bach abstractions</metadata>
		<metadata name="tag">bach math</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				The llll containing numbers
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				The quantile points
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				The quantiles or the filtered llll
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="quantile_points" optional="1" type="llll">
			<digest>
				Quantile points
			</digest>
			<description>
				The initial value for the quantile points (as the llll coming in the second inlet).
				See <m>llll</m> to know more.
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Compute quantiles
			</digest>
			<description>
				Computes the quantiles on most recently received input llll.
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Compute quantiles or set quantile points
			</digest>
			<description>
				An <m>llll</m> in the first inlet is the llll whose quantiles should be
				computed, and will trigger the calculation and output. <br />
				An <m>llll</m> in the second inlet is the llll whose elements are the quantile points
				(i.e. the list of <m>q</m>'s determining the <m>q</m> quantiles). For instance, if such
				list is <b>1/4 1/2 3/4</b>, the first 4-quantile, the median and the third 4-quantile are
				output once the left lllls comes in. Quantiles can be rational or floating point numbers. Alternatively, numbers
				can be substituted by a range-syntax lllls in the form <b>(<m>start_quantile</m> <m>end_quantile</m>)</b>;
				in this case what will be output are not the quantiles, rather the original llll filtered so that
				only numbers lying within the two quantiles will be kept (numbers equal to either one of the two quantile extremes
				are also kept).
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="absolute" get="1" set="1" type="int" size="1">
			<digest>
				Absolute Mode
			</digest>
			<description>
				Toggles the ability to interpret quantiles not as relative proportion, rather
				as absolute integer position in the list. For instance, 3 will mean "third element",
				and -4 "fourth element counted backwards", as for <o>bach.nth</o>. If <m>absolute</m> mode is active,
				asking for quantile points such as <b>(-4 -1)</b> will return essentially the four biggest numbers in
				the llll - except if the fourth biggest number has more than one occurrence in the list, in which case
				it will be returned as many times as the number of occurrences. In general, then, asking for a
				<b>(<m>M</m> <m>N</m>)</b> quantile region will not necessarily yield <m>N</m> - <m>M</m> + 1 values.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Absolute Mode" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the followings: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed. Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="sort" get="1" set="1" type="int" size="1">
			<digest>
				Sort output
			</digest>
			<description>
				If quantile points are defined in range syntax (see <m>llll</m>), the
				<m>sort</m> attribute toggles the ability to sort the output llll. By default, this attribute
				is 0, so that the output llll will not be sorted, only filtered.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Sort output" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="bach.median" />
		<seealso name="bach.filter" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				The llll containing numbers.
			</description>
		</entry>
		<entry name ="Inlet 2 (llll)">
			<description>
				The quantile points.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				The quantiles or the filtered llll.
			</description>
		</entry>
	</misc>

</c74object>