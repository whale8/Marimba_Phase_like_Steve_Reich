<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="bach.mod+" module="bach" kind="patcher">

	<digest>
		Modular arithmetic addition
	</digest>

	<description>
		Performs additions modulo a certain integer.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">bachproject</metadata>
		<metadata name="tag">bach</metadata>
		<metadata name="tag">bach abstractions</metadata>
		<metadata name="tag">bach set theory</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Left operand llll
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				Right operand llll
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="2" type="INLET_TYPE">
			<digest>
				Modulo
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				The modular addition of the two operands
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="arguments" optional="1" type="list">
			<digest>
				Arguments
			</digest>
			<description>
				If a single integer argument is provided, this is considered
				to be the modulo of the operation. If two integers are provided,
				these are considered to be the right operand and the modulo. <br />
				In the standard framework, the modulo is the number of subdivision of the octave (represented as a circle). The modulo is thus the number of
				points in this circle. The default and most common modulo is 12 (corresponding to semitonal grid). Modulo 24 is the quartertone grid, and so on.
				<br /> <br />
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Output result
			</digest>
			<description>
				Performs and outputs the calculation on the most recently received input lllls.
			</description>
		</method>
		<method name="int">
			<arglist />
			<digest>
				Set modulo
			</digest>
			<description>
				An integer in the third outlet sets the modulo of the
				operation. <br />
				In the standard framework, the modulo is the number of subdivision of the octave (represented as a circle). The modulo is thus the number of
				points in this circle. The default and most common modulo is 12 (corresponding to semitonal grid). Modulo 24 is the quartertone grid, and so on.
				<br /> <br />
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Set operand, output result
			</digest>
			<description>
				An llll in the first inlet will set the left
				llll for the addition, and will output the result; an llll
				in the second inlet will set the right llll for the addition
				(as for <o>bach.+</o>). <br />
				Unless one of the two operand lllls is a number, the operation is intended to be
				element-wise: position of elements of left and right elements must match in operations,
				both left and right lllls must have the same shape.
				If one of the two lllls is a single number, such number is used in the operation against
				all elements of the other llll (as when the <m>scalarmode</m> attribute is set to 1
				in <o>bach.expr</o>).
				<br /> <br />
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the followings: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed. Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="bach.+" />
		<seealso name="bach.%" />
		<seealso name="bach.mod-" />
		<seealso name="bach.mod*" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				Left operand llll.
			</description>
		</entry>
		<entry name ="Inlet 2 (llll)">
			<description>
				Right operand llll.
			</description>
		</entry>
		<entry name ="Inlet 3 (int)">
			<description>
				Modulo.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				The modular addition of the two operands.
			</description>
		</entry>
	</misc>

</c74object>