<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="bach.weights" module="bach">

	<digest>
		Interpolate lllls according to weights
	</digest>

	<description>
		Interpolate among multiple lllls according to weights.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">bachproject</metadata>
		<metadata name="tag">bach</metadata>
		<metadata name="tag">bach objects</metadata>
		<metadata name="tag">bach llll</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				llll with weights
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				llll to be interpolated
			</digest>
			<description>
				The first llll to be interpolated, or a list composed by sublists to be individually interpolated
			</description>
		</inlet>
		<inlet id="2" type="INLET_TYPE">
			<digest>
				llll to be interpolated
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				Result of the interpolation
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="count/mono" optional="1" type="int/mono">
			<digest>
				Number of lllls to weight
			</digest>
			<description>
				If an integer is given, inlets for the lllls to interpolate are created accordingly,
				in addition to the left inlet for the interpolation weights.
				If the symbol <b>mono</b> is given, only one inlet is created in addition to the left inlet.
				In this case, the second inlet should receive an llll composed by sublists to be interpolated.
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Perform the last operation
			</digest>
			<description>
				Return the result of the interpolation of the most recently received lllls and weights.
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Function depends on inlet
			</digest>
			<description>
				An llll in the first inlet is treated as a list of weight coefficients, each to be applied to one of the lllls to be interpolated.
				The weighted lllls are then summed together element-wise, and the resulting llll is output. <br/>
				An llll in any inlet but the first is stored, to be interpolated with respect to the weight coefficients. <br/>
				If the object is in <m>mono</m> mode (see description of the object arguments), a single llll is expected in the second outlet.
				In this case, each of its sublists will be interpolated with the corresponding weight coefficient.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the followings: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed. Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="scalarmode" get="1" set="1" type="int" size="1">
			<digest>
				Scalar Mode
			</digest>
			<description>
				When set to 1 an llll with a single element is iterated against all the elements of the other lllls.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Scalar Mode" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		<o>bach.weights</o> is especially conceived to work in conjunction with the <o>nodes</o> object.
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="bach.expr" />
		<seealso name="bach.interp" />
		<seealso name="bach.normalize" />
		<seealso name="nodes" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				llll with weights.
			</description>
		</entry>
		<entry name ="Inlet 2 (llll)">
			<description>
				llll to be interpolated.
				The first llll to be interpolated, or a list composed by sublists to be individually interpolated
			</description>
		</entry>
		<entry name ="Inlets 3, 4, 5... (llll)">
			<description>
				llll to be interpolated.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				Result of the interpolation.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		<o>bach.weights</o> is especially conceived to work in conjunction with the <o>nodes</o> object.
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
interpolate, weight, linear combination.
			</description>
		</entry>
	</misc>

</c74object>