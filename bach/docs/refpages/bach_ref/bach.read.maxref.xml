<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="bach.read" module="bach">

	<digest>
		Read an llll from disk
	</digest>

	<description>
		Reads an llll from a file.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">bachproject</metadata>
		<metadata name="tag">bach</metadata>
		<metadata name="tag">bach objects</metadata>
		<metadata name="tag">bach llll</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Read to load an llll, bang to output it
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				llll that has been loaded
			</digest>
			<description>
			</description>
		</outlet>
		<outlet id="1" type="INLET_TYPE">
			<digest>
				bang when loading is completed
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="(drag)">
			<arglist />
			<digest>
				Drag-and-drop file loading
			</digest>
			<description>
				The specified file is read from disk and the llll it contains is stored
				and optionally output, according to the <m>auto</m> attribute.
			</description>
		</method>
		<method name="bang">
			<arglist />
			<digest>
				Output the stored llll
			</digest>
			<description>
				After an llll has been read, a bang causes it to be output.
			</description>
		</method>
		<method name="read">
			<arg name="file_name" optional="1" type="symbol" />
			<digest>
				Read an llll from disk
			</digest>
			<description>
				The specified file is read from disk and the llll it contains is stored
				and optionally output, according to the <m>auto</m> attribute.
				If no file name is provided, a dialog box will open.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="auto" get="1" set="1" type="int" size="1">
			<digest>
				
			</digest>
			<description>
				When set to 1, the llll is automatically output immediately after being read from disk.
			</description>
			<attributelist>
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the followings: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed. Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		lllls in text and native format can be read indifferently
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="bach.write" />
		<seealso name="bach.shelf" />
		<seealso name="bach.reg" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (read/bang)">
			<description>
				Read to load an llll, bang to output it.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				llll that has been loaded.
			</description>
		</entry>
		<entry name ="Outlet 2 (bang)">
			<description>
				bang when loading is completed.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		lllls in text and native format can be read indifferently
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
read, load, disk, file, native, text.
			</description>
		</entry>
	</misc>

</c74object>