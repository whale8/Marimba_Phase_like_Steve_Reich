<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="bach.comb" module="bach">

	<digest>
		Combinations of elements
	</digest>

	<description>
		Returns the combinations of the elements of a given llll.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">bachproject</metadata>
		<metadata name="tag">bach</metadata>
		<metadata name="tag">bach objects</metadata>
		<metadata name="tag">bach llll</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				llll to process
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				The computed combinations
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="cardinality" optional="1" type="list">
			<digest>
				Cardinality
			</digest>
			<description>
				If only one argument is present, it is considered both start and end cardinality.
				If two arguments are present, the first is considered start cardinality, the second end cardinality
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Perform last operation
			</digest>
			<description>
				Returns the combination of the most recently received llll.
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Compute the combinations
			</digest>
			<description>
				Returns all the combinations of the given llll, within the optionally given cardinality range.
				Combinations are grouped in sublists one by one, and these sublists are utterly grouped by cardinality.
				For instance the llll <b>a b c</b>, with no cardinality limits, will trigger the result <b>(()) ((a)(b)(c)) ((a b)(a c)(b c)) ((a b c))</b>
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="kend" get="1" set="1" type="atom" size="1">
			<digest>
				End cardinality
			</digest>
			<description>
				End cardinality.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="End cardinality" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="kstart" get="1" set="1" type="int" size="1">
			<digest>
				Start cardinality
			</digest>
			<description>
				Start cardinality.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Start cardinality" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the followings: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed. Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		Combinations are grouped in sublists according to their cardinality.
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="bach.perm" />
		<seealso name="bach.scramble" />
		<seealso name="bach.cartesianprod" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				llll to process.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				The computed combinations.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		Combinations are grouped in sublists according to their cardinality.
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
combination, combinatory, element.
			</description>
		</entry>
	</misc>

</c74object>