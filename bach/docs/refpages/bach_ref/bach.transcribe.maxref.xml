<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="bach.transcribe" module="bach" kind="patcher">

	<digest>
		Fills a <o>bach.roll</o> according to incoming MIDI data
	</digest>

	<description>
		The purpose of <o>bach.transcribe</o> is to act as a machine which, when turned on,
		receives data containing cents, velocities and voice numbers (and optional durations),
		and properly adds in real time the notes in the
		connected <o>bach.roll</o> object.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">bachproject</metadata>
		<metadata name="tag">bach</metadata>
		<metadata name="tag">bach abstractions</metadata>
		<metadata name="tag">bach notation</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				1/0 to start/stop transcription
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				MIDI triplets/quadruplets in the form: cents, velocity, voice number; (optional) duration (ms)
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				Messages to <o>bach.roll</o>
			</digest>
			<description>
			</description>
		</outlet>
		<outlet id="1" type="INLET_TYPE">
			<digest>
				The current time in milliseconds
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="allnotesoff">
			<arglist />
			<digest>
				Send note-off messages for all active notes
			</digest>
			<description>
				A <m>allnotesoff</m> message ends all notes currently being played, as if their
				note off MIDI triplets had been sent through the right inlet.
			</description>
		</method>
		<method name="int">
			<arglist />
			<digest>
				Turn transcription on/off
			</digest>
			<description>
				A <m>1</m> in the first inlet turns the transcription on: <o>bach.transcribe</o>
				clears the connected <o>bach.roll</o> (if any) and starts expecting the MIDI triplets from
				its second inlet, in order to add notes in the <o>bach.roll</o>. A <m>0</m> in the first
				inlet turns the transcription off (MIDI triplets in the second inlet no longer have any effect).
			</description>
		</method>
		<method name="list">
			<arglist />
			<digest>
				Transcribe MIDI triplets/quadruplets
			</digest>
			<description>
				A <m>list</m> in the second inlet is expected to be in the form of a MIDI triplet containing three integers:
				<b><m>cents</m> <m>velocity</m> <m>voice_number</m></b>. When <m>velocity</m> is strictly positive,
				this triplet represents a note, in the voice defined by the <m>voice_number</m>, which starts in the exact
				moment the triplet has been sent, and has the introduced <m>cents</m> as pitch. In this case,
				the appropriate messages to add a note are sent to the the possibly connected <o>bach.roll</o>.
				The note duration is regularly updated (see the <m>refresh</m> attribute), until a note-off event
				is received concerning the specific note. At any new received triplets or refreshing, the current
				time is also output from the second outlet, and the screen position is refreshed (see <m>inscreenpos</m> attribute).
				Note-off events are simply represented by triplet having <m>velocity</m> zero. <br />
				For instance, a triplet <b>6000 70 1</b> adds a middle C having velocity of 70 in the first voice.
				To turn such note off, you'll need to send a note-off triplet <b>6000 0 1</b>. <br />
				If one more element is given in the third inlet (thus a MIDI quadruplet is input), such element is considered to be
				the duration of the note in milliseconds. For such note, there will be no need to send any note-off: the note
				is simply added with its complete duration as soon as the quadruplet is entered.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="autoclear" get="1" set="1" type="int" size="1">
			<digest>
				Autoclear
			</digest>
			<description>
				Toggles the ability to automatically clear the <o>bach.roll</o> connected to the first outlet whenever a transcription
				starts. By default it is on.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Autoclear" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="inscreenpos" get="1" set="1" type="float" size="1">
			<digest>
				Current Instant Relative Position In Domain
			</digest>
			<description>
				When new MIDI data arrive in the third inlet or when a refresh operation is performed (see <m>refresh</m> attribute),
				the horizontal scrollbar position of the connected <o>bach.roll</o> (if any and if its horizontal scrollbar is visible)
				is changed in order for the "current instant" to be at a certain point inside the notation object domain.
				This point is a number between 0. and 1. defined by this attribute, 0. meaning: at the beginning of the
				displayed portion of score, and 1. meaning: at the end of the displayed portion of score. (This is the very same
				parameter that one encounters with <o>bach.roll</o>'s <m>inscreenpos</m> message.)
				Defaults to 0.7.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Current Instant Relative Position In Domain" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="play" get="1" set="1" type="int" size="1">
			<digest>
				Also Play
			</digest>
			<description>
				Toggles the ability to also play the transcribed content (with a delay set via the <m>playdelay</m> attribute).
				By default it is off.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Also Play" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="playdelay" get="1" set="1" type="float" size="1">
			<digest>
				Play Delay
			</digest>
			<description>
				If <m>play</m> is on, sets the delay between the writing cursor and the playing cursor, i.e.
				the delay before play starts. Defaults to 250ms.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Play Delay" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="refresh" get="1" set="1" type="int" size="1">
			<digest>
				Refresh Time In Milliseconds
			</digest>
			<description>
				Sets the refresh time, for the note durations, in milliseconds.
				Set this attribute to 0 in order to only refresh when new MIDI arrives in the third inlet (see <m>list</m> message).
				Defaults to 100ms.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Refresh Time In Milliseconds" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		<o>bach.transcribe</o> is note-based: each MIDI triplets
		refers to a note. If you want, a posteriori, to align notes into chords,
		you should look at <o>bach.roll</o>'s <m>merge</m> message.
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="bach.roll" />
		<seealso name="bach.quantize" />
		<seealso name="bach.ezmidiplay" />
		<seealso name="08-Real Time Stories" module="bach" type="tutorial" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (int)">
			<description>
				1/0 to start/stop transcription.
			</description>
		</entry>
		<entry name ="Inlet 2 (list/llll)">
			<description>
				MIDI triplets/quadruplets in the form: cents, velocity, voice number; (optional) duration (ms).
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (list)">
			<description>
				Messages to <o>bach.roll</o>.
			</description>
		</entry>
		<entry name ="Outlet 2 (float)">
			<description>
				The current time in milliseconds.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		<o>bach.transcribe</o> is note-based: each MIDI triplets
		refers to a note. If you want, a posteriori, to align notes into chords,
		you should look at <o>bach.roll</o>'s <m>merge</m> message.
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
transcribe, write, fill, MIDI, stream, pitch, velocity, cent, midicent, voice, number, duration, insert, note, proportional.
			</description>
		</entry>
	</misc>

</c74object>