<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="bach.filternull" module="bach" kind="patcher">

	<digest>
		Let through every non-null input
	</digest>

	<description>
		Takes the incoming data and
		outputs it through its first outlet only if it is
		not a <b>null</b> llll; otherwise it sends a bang
		or a default llll through the second outlet.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">bachproject</metadata>
		<metadata name="tag">bach</metadata>
		<metadata name="tag">bach abstractions</metadata>
		<metadata name="tag">bach llll</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				The incoming llll
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				The default
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				The llll if not null
			</digest>
			<description>
			</description>
		</outlet>
		<outlet id="1" type="INLET_TYPE">
			<digest>
				bang or default if incoming llll is null
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="default" optional="1" type="llll">
			<digest>
				Default
			</digest>
			<description>
				The optional argument sets the initial default value which will be output,
				instead of the usual <m>bang</m>, from the second outlet when a <b>null</b> <m>llll</m> is input.
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Revert to bang default
			</digest>
			<description>
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Let llll through if not null, bang otherwise, or set default
			</digest>
			<description>
				An <m>llll</m> in the first inlet is immediately output through the left outlet
				if it is not <m>null</m>. If the incoming llll, on the other hand, is a <b>null</b> llll,
				a bang is sent through the second outlet, unless a default has been defined via the optional
				argument, or via the right inlet, in which case, this default llll is output from the
				second outlet instead. <br />
				An <m>llll</m> in the second inlet sets the default llll.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the followings: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed. Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		<o>bach.filternull</o> is slightly more efficient than
		using <o>bach.filter</o> with argument <b>- n</b>.
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="bach.filter" />
		<seealso name="01-Hello World" module="bach" type="tutorial" />
		<seealso name="03-Iterations" module="bach" type="tutorial" />
		<seealso name="05-Slot Machines" module="bach" type="tutorial" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				The incoming llll.
			</description>
		</entry>
		<entry name ="Inlet 2 (bang/llll)">
			<description>
				The default.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				The llll if not null.
			</description>
		</entry>
		<entry name ="Outlet 2 (bang)">
			<description>
				bang or default if incoming llll is null.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		<o>bach.filternull</o> is slightly more efficient than
		using <o>bach.filter</o> with argument <b>- n</b>.
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
pass, filter, reject, accept, route, let through, null.
			</description>
		</entry>
	</misc>

</c74object>