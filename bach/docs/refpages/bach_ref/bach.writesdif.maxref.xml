<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="bach.writesdif" module="bach">

	<digest>
		Write an SDIF file
	</digest>

	<description>
		Writes an SDIF file starting from its llll representation.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">bachproject</metadata>
		<metadata name="tag">bach</metadata>
		<metadata name="tag">bach objects</metadata>
		<metadata name="tag">bach llll</metadata>
	</metadatalist>

	<!--ARGUMENTS-->
	<objarglist>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="llll">
			<arglist />
			<digest>
				Function depends on inlet
			</digest>
			<description>
				An llll received in the second inlet sets the header of the SDIF file to be written.
				An llll received in the third inlet sets the body of the SDIF file to be written.<br/><br/>
				- The header llll is composed by three optional lllls,
				respectively for the name-value tables (preceded by the <m>nvt</m> key),
				the frame definitions (preceded by the <m>frametypes</m> key)
				and the matrix definitions (preceded by the <m>matrixtypes</m> key).
				Each of these sublists is actually output only if the corresponding data are present
				in the SDIF files. The structure of the header llll is <br/>
				<m>(nvt ((&lt;name&gt; &lt;value&gt;) ...) ...)<br/>
				(frametypes (&lt;frame signature&gt; ((&lt;matrix signature&gt; &lt;component name (optional)&gt;) ...) ...) ...)<br/>
				(matrixtypes (&lt;matrix signature&gt; (&lt;column name&gt; ...) ...) ...)</m><br/><br/>
				- The body llll contains the actual data from the SDIF file, rearranged by stream.
				It is composed by one sublist for each stream in the SDIF file.
				The structure of the body llll is <br/>
				<m> (&lt;stream id&gt; (&lt;frame signature&gt; &lt;time&gt; ((&lt;matrix signature&gt; ((&lt;data item&gt; ...) ...) ...)) ...) ...)</m><br/>
				This means that the data contained in each matrix are represented as a sublist
				containing one sublist per row, containing the row's data.
				Text and Char matrices are an exceptions, as the text they contain is packed into symbols, one per row.
				Therefore, the structure of a text matrix sublist is<br/>
				<m> &lt;matrix signature&gt; (&lt;row text&gt; ...)</m><br/><br/>
				It should be noted that minimal error and consistency checking is performed.
				As a consequence, if the input data are not semantically correct, the resulting SDIF file can be invalid
				and other applications may refuse to open it.
			</description>
		</method>
		<method name="write">
			<arg name="file_name" optional="1" type="symbol" />
			<digest>
				Write the SDIF file
			</digest>
			<description>
				The SDIF file whose contents have been passed to <o>bach.writesdif</o> is written to disk.
				A file name can be provided as a message argument; otherwise, a dialog box will open.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the followings: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed. Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="bach.readsdif" />
		<seealso name="bach.write" />
		<seealso name="bach.roll" />
	</seealsolist>

</c74object>