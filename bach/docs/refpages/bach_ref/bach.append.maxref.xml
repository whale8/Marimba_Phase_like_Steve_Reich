<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="bach.append" module="bach">

	<digest>
		Append lllls together
	</digest>

	<description>
		Appends lllls together, according to the positions of the inlets by which they are received.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">bachproject</metadata>
		<metadata name="tag">bach</metadata>
		<metadata name="tag">bach objects</metadata>
		<metadata name="tag">bach llll</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				llll to be joined to the ones in the other inlets
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				All the incoming lllls joined together
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="count" optional="1" type="int">
			<digest>
				Number of inlets
			</digest>
			<description>
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Perform the last operation
			</digest>
			<description>
				A bang will cause all the lllls in the inlets to be chained together and output.
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Join the llll to the others
			</digest>
			<description>
				The llll will be joined to all the other lllls received in the other inlets,
				in the order given by each inlet's position.
				A <b>null</b> llll is ignored.
				If the inlet is marked as "hot" by the <m>triggers</m> attribute, the resulting llll is output.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="inwrap" get="1" set="1" type="int" size="1">
			<digest>
				Wrap Input
			</digest>
			<description>
				Wrap every incoming llll in the corresponding number of parentheses.
				This is equivalent to connecting a <o>bach.wrap</o> object to every llll inlet.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Wrap Input" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the followings: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed. Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="outwrap" get="1" set="1" type="int" size="1">
			<digest>
				Wrap Output
			</digest>
			<description>
				Wrap every output llll in the correspongind number of parentheses.
				This is equivalent to connecting a <o>bach.wrap</o> object to every llll outlet.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Wrap Output" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="set" get="1" set="1" type="llll" size="1">
			<digest>
				
			</digest>
			<description>
				The <m>set</m> attribute allows providing the inlets of <o>bach.append</o> with default lllls.
				The contents of each sublist of the <m>set</m> attribute is assigned to one inlet.
				So <b>set (a b) (c d) ((e f))</b> will assign <b>a b</b> to the first inlet, <b>c d</b> to the second,
				<b>(e f)</b> to the third. If <o>bach.append</o> has less inlets than the size of the <m>set</m> llll,
				the elements in excess are ignored. If it has more inlets, the inlets in excess are cleared.
				<b>set null</b> clears all the inlets. <br />
				Elements without parentheses are assigned to distinct inlets, as if each had a couple of parentheses around it.
				So <b> set a b c</b> will assign <b>a</b> to the first inlet, <b>b</b> to the second, <b>c</b> to the third.<br/>
				The <m>set</m> attribute can't be set through the object inspector.
			</description>
			<attributelist>
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="triggers" get="1" set="1" type="int_array" size="0">
			<digest>
				Triggers
			</digest>
			<description>
				A list setting which inlets are "hot" (i.e., which will will trigger the result).
				<m>-1</m> means all inlets are hot. No arguments mean all inlets are cold. Default is 1.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Triggers" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="bach.slice" />
		<seealso name="bach.lace" />
		<seealso name="bach.insert" />
		<seealso name="bach.subs" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlets 1, 2, 3... (llll)">
			<description>
				llll to be joined to the ones in the other inlets.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				All the incoming lllls joined together.
			</description>
		</entry>
	</misc>

</c74object>