<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="bach.idvector" module="bach" kind="patcher">

	<digest>
		Build cartesian versors and combinations
	</digest>

	<description>
		Builds versors having all 0's as entries, except for a 1 in a given position (or combinations of such versors).
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">bachproject</metadata>
		<metadata name="tag">bach</metadata>
		<metadata name="tag">bach abstractions</metadata>
		<metadata name="tag">bach matrix calculus</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Position(s) of the 1('s)
			</digest>
			<description>
				The index or indices corresponding to the 1's in the vector is expected
				in the first inlet
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				Change the output vector length
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				The built vector
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="size" optional="1" type="int">
			<digest>
				Length of the vector
			</digest>
			<description>
				The length of the output vector (defaults to 1)
			</description>
		</objarg>
		<objarg name="position-of-ones" optional="1" type="list">
			<digest>
				Position(s) of the 1('s)
			</digest>
			<description>
				The index or indices corresponding to the 1's in the vector can be listed
				as second argument (by default the 1st element of the vector is the 1).
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Build the vector
			</digest>
			<description>
				Builds the vector according to the most recently input data.
			</description>
		</method>
		<method name="int">
			<arglist />
			<digest>
				Function depends on inlet
			</digest>
			<description>
				An integer in the first inlet outputs the cartesian vector having
				all 0's and just a 1 in the position specified by the incoming index. For instance,
				if the incoming index is 2, and the length of the vector is 5, the vector will be
				<b>0 1 0 0 0</b>. It also works with negative indices, as elsewhere in bach, indicating
				elements right-to-left (-1 being the last, -2 the one-but-last...).<br />
				An integer in the second inlet sets a new length of the vector.
			</description>
		</method>
		<method name="list">
			<arglist />
			<digest>
				Output combination of cartesian versors
			</digest>
			<description>
				A list in the first inlet is considered as a list of indices corresponding to
				1's elements in the vector, while every other index is considered to be 0. As for the
				<m>int</m> case, negative indices are allowed indicating elements to be counted right-to-left
				(-1 being the last, -2 the one-but-last...). For instance, if the length of the vector is 5,
				a list of <b>2 -2 -1</b> will trigger the output of the vector <b>0 1 0 1 1</b>.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the followings: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed. Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="bach.idmatrix" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (int/list)">
			<description>
				Position(s) of the 1('s).
				The index or indices corresponding to the 1's in the vector is expected
				in the first inlet
			</description>
		</entry>
		<entry name ="Inlet 2 (int)">
			<description>
				Change the output vector length.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				The built vector.
			</description>
		</entry>
	</misc>

</c74object>